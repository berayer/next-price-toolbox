// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Mat {
  id        Int        @id @default(autoincrement())
  name      String
  code      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  MatColor  MatColor[]
}

model Color {
  id        Int        @id @default(autoincrement())
  name      String
  code      String
  fullName  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  MatColor  MatColor[]
}

model MatColor {
  id            Int             @id @default(autoincrement())
  mat           Mat             @relation(fields: [matId], references: [id])
  matId         Int
  color         Color           @relation(fields: [colorId], references: [id])
  colorId       Int
  spec          Int
  thick         Int
  minDog        Float?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  MatColorPrice MatColorPrice[]
}

model MatColorPrice {
  id               Int                @id @default(autoincrement())
  matColor         MatColor           @relation(fields: [matColorId], references: [id])
  matColorId       Int
  priceType        MatColorPriceType  @relation(fields: [priceTypeId], references: [id])
  priceTypeId      Int
  price            Float
  refId            Int?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  MatColorPriceLog MatColorPriceLog[]
}

model MatColorPriceType {
  id            Int             @id @default(autoincrement())
  name          String
  remark        String?
  priceModel    String          @default("按面积")
  unit          String          @default("平方")
  expression    String?
  priority      Int             @default(100)
  ruleTypeId    Int             @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  MatColorPrice MatColorPrice[]
}

model MatColorPriceLog {
  id              Int           @id @default(autoincrement())
  matColorPrice   MatColorPrice @relation(fields: [matColorPriceId], references: [id])
  matColorPriceId Int
  oldPrice        Float         @default(0)
  newPrice        Float
  createdAt       DateTime      @default(now())
}
